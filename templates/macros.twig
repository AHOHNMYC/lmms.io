{# Prints an FontAwesome icon #}
{% macro icon(icon, brand = false, transform = '') %}
	{# Check if we have a brand icon, different syntax #}
	{% if brand %}
		<span class="fab {{ icon }}" data-fa-transform="{{ transform }}"></span>
	{% else %}
		<span class="fas {{ icon }}" data-fa-transform="{{ transform }}"></span>
	{% endif %}
{% endmacro %}

{# Creates a small Jumbo header #}
{% macro jumbo(title, subtitle) %}
<div class="jumbotron mini">
	<div class="container">
		<h2>{{title}}</h2>
		<h5>{{subtitle}}</h5>
	</div>
</div>
{% endmacro %}

{# Prints an FontAwesome icon stack with two icons and a tooltip #}
{% macro icon_stack(icon1, brand1, icon2, brand2, parentclass, tooltip) %}
	{% import _self as macros %}
	<span class='fa-layers fa-fw {{ parentclass }}' data-toggle='tooltip' data-placement='top' title='{{ tooltip }}'>
		{{ macros.icon(icon1, brand1) }}
		{{ macros.icon(icon2, brand2, "shrink-6") }}
	</span>
{% endmacro %}

{# Prints an icon stack with the lower one being a double sized circle
   and the upper one being inversed #}
{% macro circle_stack(icon, class = '', brand, tooltip = '') %}
	{% import _self as macros %}
	{{ macros.icon_stack('fa-circle', false, "#{icon} fa-inverse", brand, class , tooltip ) }}
{% endmacro %}

{# Prints an icon stack with the lower one being a double square
   and the upper one being inversed #}
{% macro square_stack(icon, class = '', brand, tooltip = '') %}
	{% import _self as macros %}
	{{ macros.icon_stack('fa-square', false, "#{icon} fa-inverse", brand, class , tooltip ) }}
{% endmacro %}
